[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multi-agent-orchestration"
version = "1.0.0"
description = "Advanced Multi-Agent Orchestration Platform with Dynamic Tool Usage and Adaptive Workflows"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Joshua Morrison", email = "joshamorrison@gmail.com"}
]
keywords = ["multi-agent", "orchestration", "langgraph", "langsmith", "ai", "workflow"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers", 
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"
dependencies = [
    # Core Dependencies
    "pandas>=2.0.0",
    "numpy>=1.21.0", 
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0",
    "requests>=2.28.0",
    
    # Multi-Agent Framework
    "langgraph>=0.1.0",
    "langsmith>=0.1.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.20",
    "langchain-openai>=0.0.8",
    "openai>=1.12.0",
    
    # AWS Integration
    "boto3>=1.34.0",
    "langchain-aws>=0.1.0",
    
    # Graph & Workflow
    "networkx>=3.0.0",
    "graphviz>=0.20.0",
    
    # Monitoring & Observability
    "prometheus-client>=0.19.0",
    "loguru>=0.7.0",
    
    # API Framework
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    
    # Web Interface
    "streamlit>=1.30.0",
    "gradio>=4.0.0",
    
    # Data Validation
    "pydantic>=2.5.0",
    
    # Visualization
    "plotly>=5.17.0",
    "matplotlib>=3.5.0",
    
    # Database & Storage
    "sqlalchemy>=2.0.0",
    "redis>=5.0.0",
    
    # Task Queue
    "celery>=5.3.0",
    
    # Utilities
    "tqdm>=4.66.0",
    "joblib>=1.3.0",
    "asyncio>=3.4.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
]

jupyter = [
    "jupyter>=1.0.0",
    "notebook>=7.0.0",
    "ipykernel>=6.25.0",
]

all = [
    "multi-agent-orchestration[dev,jupyter]"
]

[project.urls]
Homepage = "https://github.com/joshamorrison/portfolio-multi-agent-orchestration"
Documentation = "https://github.com/joshamorrison/portfolio-multi-agent-orchestration/blob/main/README.md"
Repository = "https://github.com/joshamorrison/portfolio-multi-agent-orchestration.git"
"Bug Tracker" = "https://github.com/joshamorrison/portfolio-multi-agent-orchestration/issues"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ['py39', 'py310', 'py311']

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "--cov=src",
    "--cov-report=html",
    "--cov-report=term-missing",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
check_untyped_defs = true
ignore_missing_imports = true