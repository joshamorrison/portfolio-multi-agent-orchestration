version: '3.8'

services:
  multi-agent-api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: multi_agent_api
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - PYTHONPATH=/app
      - LANGCHAIN_TRACING_V2=true
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ../data:/app/data
      - ../outputs:/app/outputs
      - ../logs:/app/logs
    depends_on:
      - redis
      - postgres
    networks:
      - multi-agent-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: multi_agent_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - multi-agent-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  postgres:
    image: postgres:15-alpine
    container_name: multi_agent_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=multi_agent_db
      - POSTGRES_USER=multi_agent_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../infrastructure/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - multi-agent-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U multi_agent_user -d multi_agent_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  langsmith-proxy:
    image: nginx:alpine
    container_name: multi_agent_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - multi-agent-api
    networks:
      - multi-agent-network
    restart: unless-stopped

  monitoring:
    image: prom/prometheus:latest
    container_name: multi_agent_monitoring
    ports:
      - "9090:9090"
    volumes:
      - ../infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - multi-agent-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  multi-agent-network:
    driver: bridge
    name: multi-agent-network